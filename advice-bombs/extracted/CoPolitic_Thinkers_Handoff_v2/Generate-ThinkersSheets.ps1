param(
  [Parameter(Mandatory=$false)] [string] $CoCore = "$env:USERPROFILE\Documents\GitHub\CoCore",
  [Parameter(Mandatory=$false)] [string] $JsonRel = "best-practices\thinkers\thinkers.json",
  [Parameter(Mandatory=$false)] [string] $SheetsRel = "docs\thinkers\sheets"
)

$ErrorActionPreference = "Stop"

$JsonIn = Join-Path $CoCore $JsonRel
$SheetsDir = Join-Path $CoCore $SheetsRel

if (!(Test-Path $JsonIn)) {
  throw "Dataset not found: $JsonIn`nCreate it or copy from CoPolitic docs\assets\thinkers\thinkers.json"
}

New-Item -ItemType Directory -Force -Path $SheetsDir | Out-Null

# Load JSON
$data = Get-Content $JsonIn -Raw | ConvertFrom-Json

function To-Slug([string]$s) {
  ($s.ToLower() -replace "[^a-z0-9]+","-").Trim("-")
}

foreach($t in $data){
  $slug = To-Slug $t.name
  $sheet = Join-Path $SheetsDir "$slug.html"
  $sheetUrl = "https://rickballard.github.io/CoCore/thinkers/sheets/$slug.html"
  $t | Add-Member -NotePropertyName sheet_url -NotePropertyValue $sheetUrl -Force

  $domains = ($t.domains | ForEach-Object { "<span class='pill'>$_</span>" }) -join " "
  $ideas   = ($t.key_ideas -join " · ")
  $mods    = ($t.co_modules -join ", ")
  $sources = ($t.sources | ForEach-Object { "<li><a href='$($_.url)' target='_blank' rel='noopener'>$($_.label ?? $_.url)</a></li>" }) -join "`n"

  $html = @"
<!DOCTYPE html>
<html lang="en"><head>
<meta charset="utf-8"/>
<meta name="viewport" content="width=device-width, initial-scale=1">
<title>$($t.name) · CoCore Thinkers</title>
<style>
  body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Arial,sans-serif;background:#0e0e10;color:#eee;margin:0;padding:24px}
  a{color:#74b9ff;text-decoration:none} a:hover{text-decoration:underline}
  .wrap{max-width:900px;margin:0 auto}
  .pill{display:inline-block;padding:4px 10px;border-radius:999px;font-size:12px;background:#1c1c22;margin:2px 6px 0 0}
  .meta{opacity:.8;font-size:14px}
  .card{background:#141418;border:1px solid #23232a;border-radius:16px;padding:20px;margin-top:16px}
  h1{margin:0 0 8px}
  .badge{display:inline-block;padding:2px 8px;border-radius:999px;font-size:12px;border:1px solid #2b2b32;margin-left:8px;opacity:.9}
</style>
</head><body>
<div class="wrap">
  <a href="../../thinkers/">← Back to all thinkers</a>
  <h1>$($t.name)<span class="badge">$($t.alignment.fit)</span></h1>
  <div class="meta">$domains</div>

  <div class="card">
    <h3>Alignment summary</h3>
    <p>$($t.alignment.summary)</p>
    <p><strong>Key ideas:</strong> $ideas</p>
    $(if($mods){ "<p><strong>CoCivium modules:</strong> $mods</p>" })
    <h3>Primary sources</h3>
    <ul>
      $sources
    </ul>
    <div class="meta">Last-checked: $($t.provenance.last_checked)</div>
  </div>

  <p class="meta">Sheet autogenerated from CoCore best-practices dataset.</p>
</div>
</body></html>
"@

  Set-Content -Path $sheet -Value $html -NoNewline
}

# Write updated JSON (with sheet_url fields added)
$JsonOut = $data | ConvertTo-Json -Depth 8
Set-Content -Path $JsonIn -Value $JsonOut -NoNewline

Write-Host "Sheets generated in $SheetsDir"
Write-Host "Updated dataset written to $JsonIn"
Write-Host "Next: commit & push CoCore, e.g.:"
Write-Host "  cd `"$CoCore`"; git add `"$SheetsRel`" `"$JsonRel`"; git commit -m `"feat(thinkers): generate sheets + sheet_url`"; git push"
